---
- name: install and configure basic development stack

  block:

    - name: check if igv executable is present
      shell: "which /usr/local/bin/igv"
      register: igv_bin
      ignore_errors: true

    - name: download IGV
      get_url:
        url: https://data.broadinstitute.org/igv/projects/downloads/2.11/IGV_Linux_2.11.0_WithJava.zip
        dest: /tmp/igv.zip
      when: igv_bin.rc != 0


    - name: Extract igv into /usr/local/lib/
      ansible.builtin.unarchive:
        src: /tmp/igv.zip
        dest: /usr/local/lib/
      when: igv_bin.rc != 0


    - name: Create a symbolic link
      ansible.builtin.file:
        src: /usr/local/lib/IGV_Linux_2.11.0/igv.sh
        dest: /usr/local/bin/igv
        state: link
      when: igv_bin.rc != 0


    - name: check if samtools executable is present
      shell: "which /usr/local/bin/samtools"
      register: samtools_bin
      ignore_errors: true

    - name: Install samtools
      ansible.builtin.shell:  |
        curl -Lo /tmp/samtools.tgz.bz2 https://github.com/samtools/samtools/releases/download/1.13/samtools-1.13.tar.bz2 
        mkdir /tmp/samtools 
        tar jxvf /tmp/samtools.tgz.bz2 --strip 1 -C /tmp/samtools 
        cd /tmp/samtools 
        ./configure --prefix=/usr/local/  
        make  
        make install  
        rm -rf /tmp/samtools*
      when: samtools_bin.rc != 0


    - name: check if bwa executable is present
      shell: "which /usr/local/bin/bwa"
      register: bwa_bin
      ignore_errors: true


    - name: Install bwa
      ansible.builtin.shell:  |
        curl -Lo /tmp/bwa.tgz.bz2 https://downloads.sourceforge.net/project/bio-bwa/bwa-0.7.17.tar.bz2 
        mkdir /tmp/bwa 
        tar jxvf /tmp/bwa.tgz.bz2 --strip 1 -C /tmp/bwa 
        cd /tmp/bwa 
        make  
        cp bwa /usr/local/bin/bwa  
        rm -rf /tmp/bwa*
      when: bwa_bin.rc != 0

    - name: check if minimap2 executable is present
      shell: "which /usr/local/bin/minimap2"
      register: minimap2_bin
      ignore_errors: true

    - name: Install minimap2
      ansible.builtin.shell:  |
        curl -Lo /tmp/minimap2.tgz.bz2 https://github.com/lh3/minimap2/releases/download/v2.20/minimap2-2.20.tar.bz2 
        mkdir /tmp/minimap2 
        tar jxvf /tmp/minimap2.tgz.bz2 --strip 1 -C /tmp/minimap2 
        cd /tmp/minimap2 
        make 
        cp  minimap2 /usr/local/bin/minimap2  
        rm -rf /tmp/minimap2*
      when: minimap2_bin.rc != 0


    - name: make /usr/local/jars for jars
      file:
        dest: /usr/local/jars
        state: directory
        owner: "{{user_name}}"
        mode: 0755

    - name: check for cromwell-60.jar
      stat:
        path: /usr/local/jars/cromwell-60.jar
      register: cromwell


    - name: get cromwell jar 60.0
      get_url:
        url: https://github.com/broadinstitute/cromwell/releases/download/60/cromwell-60.jar
        dest: /usr/local/jars
      when: not cromwell.stat.exists


    - name: check for womtool-60.jar
      stat:
        path: /usr/local/jars/womtool-60.jar
      register: womtool


    - name: get womtool jar 60.0
      get_url:
        url: https://github.com/broadinstitute/cromwell/releases/download/60/womtool-60.jar
        dest: /usr/local/jars
      when: not womtool.stat.exists


    - name: get cromwell wrapper
      get_url:
        url: https://raw.githubusercontent.com/neuromics/cromwell-utils/main/bin/cromwell
        dest: /usr/local/bin/cromwell
        mode: 0755

    - name: get womtool wrapper
      get_url:
        url: https://raw.githubusercontent.com/neuromics/cromwell-utils/main/bin/womtool
        dest: /usr/local/bin/womtool
        mode: 0755

